
apiVersion: networking.k8s.io/v1
kind: Ingress 
metadata: 
  name: alb-gateway-ingress
  namespace: argocd
  annotations: 
    alb.ingress.kubernetes.io/target-type: 'ip'
    # kubernetes.io/ingress.class: my-aws-ingress-class  
    alb.ingress.kubernetes.io/load-balancer-name: ingress-ssl-gateway
    alb.ingress.kubernetes.io/scheme: internet-facing 
    # alb.ingress.kubernetes.io/healthcheck-path: :server/healthz
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    # alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:659706089488:certificate/793a6154-8a24-449d-aed5-9257e19f5c92
    external-dns.alpha.kubernetes.io/hostname: argocd.magiclab396.com
    alb.ingress.kubernetes.io/group.name: myapps.web
    alb.ingress.kubernetes.io/group.order: '20'
spec:
  ingressClassName: my-aws-ingress-class
  rules:
  - host: "argocd.magiclab396.com"
    http:
      paths:      
      - backend:
          service:
            name: argo-cd-argocd-server
            port: 
              name: https
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - argocd.magiclab396.com
    secretName: argocd-secret
      # -  route:
  #   - destination:
  #       host: grafana.istio-system.svc.cluster.local
  #       port:
  #         number: 3000